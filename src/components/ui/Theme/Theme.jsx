import React, { useEffect, useState } from 'react';
import './Theme.css';


function Theme(props) {
    
    const [theme, setTheme] = useState(
        localStorage.getItem('theme') || 'white'
    );

    useEffect(() => {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        applyTheme(theme);
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

    useEffect(() => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É –≤ localStorage –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –µ—ë –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        localStorage.setItem('theme', theme);
        applyTheme(theme);
    }, [theme]);

    const applyTheme = (theme) => {
        const wrapper = document.querySelector('.wrapper');
        if (wrapper) {
            wrapper.classList.remove('light-theme', 'dark-theme');
            if (theme === 'white') {
                wrapper.classList.add('light-theme');
            } else {
                wrapper.classList.add('dark-theme');
            }
        }
    };

    return (
        <button
            type='button'
            className='theme'
            onClick={() => {
                setTheme(theme === 'white' ? 'black' : 'white');
            }}
        >
            {theme === 'white' ? '‚òÄÔ∏è' : 'üåô'} {/* –°–æ–ª–Ω—Ü–µ –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã, –ª—É–Ω–∞ –¥–ª—è —Ç–µ–º–Ω–æ–π */}
        </button>
    );
}

export default Theme;